<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>과일 잡기 게임</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    #game {
      position: relative;
      width: 400px;
      height: 500px;
      background: linear-gradient(#87ceeb, #f0e68c);
      overflow: hidden;
      border: 5px solid #fff;
      border-radius: 10px;
    }
    .basket {
      position: absolute;
      bottom: 10px;
      width: 80px;
      height: 40px;
      background: saddlebrown;
      border-radius: 10px;
    }
    .fruit {
      position: absolute;
      width: 40px;
      height: 40px;
      border-radius: 50%;
    }
  </style>
</head>
<body class="bg-gradient-to-br from-green-400 via-yellow-400 to-red-400 min-h-screen flex flex-col items-center justify-center text-white">
  <h1 class="text-4xl font-extrabold mb-4 drop-shadow-lg">🍎 과일 잡기 게임 🍌</h1>
  <div id="game">
    <div id="basket" class="basket"></div>
  </div>
  <button id="startBtn" class="btn btn-primary btn-lg mt-4">게임 시작</button>

  <script>
    const game = document.getElementById('game');
    const basket = document.getElementById('basket');
    let score = 0;
    let gameInterval, fruitInterval;
    let basketPos = 160;
    basket.style.left = basketPos + 'px';

    document.addEventListener('keydown', e => {
      if (e.key === 'ArrowLeft' && basketPos > 0) basketPos -= 20;
      if (e.key === 'ArrowRight' && basketPos < 320) basketPos += 20;
      basket.style.left = basketPos + 'px';
    });

    function createFruit() {
      const fruit = document.createElement('div');
      fruit.className = 'fruit';
      const colors = ['red', 'yellow', 'orange', 'purple', 'pink'];
      fruit.style.background = colors[Math.floor(Math.random() * colors.length)];
      fruit.style.left = Math.floor(Math.random() * 360) + 'px';
      fruit.style.top = '0px';
      game.appendChild(fruit);

      let fallInterval = setInterval(() => {
        let fruitTop = parseInt(fruit.style.top);
        fruit.style.top = fruitTop + 5 + 'px';

        if (fruitTop > 460 && parseInt(fruit.style.left) > basketPos - 40 && parseInt(fruit.style.left) < basketPos + 80) {
          score++;
          fruit.remove();
          clearInterval(fallInterval);
        }
        if (fruitTop > 500) {
          fruit.remove();
          clearInterval(fallInterval);
        }
      }, 30);
    }

    document.getElementById('startBtn').addEventListener('click', () => {
      score = 0;
      game.innerHTML = '';
      game.appendChild(basket);
      basketPos = 160;
      basket.style.left = basketPos + 'px';

      gameInterval = setTimeout(() => {
        clearInterval(fruitInterval);
        Swal.fire({
          title: '게임 종료',
          html: `<div class='text-3xl font-bold'>점수: ${score}</div>`,
          icon: 'success',
          confirmButtonText: '다시하기'
        });
      }, 20000);

      fruitInterval = setInterval(createFruit, 800);
    });
  </script>
</body>
</html>